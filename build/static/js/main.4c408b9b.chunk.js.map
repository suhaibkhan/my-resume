{"version":3,"sources":["components/Doc.module.css","components/template/LatestTemplate.module.css","components/template/SubSection.module.css","App.module.css","components/template/IconLabel.module.css","components/Doc.tsx","utils/utils.ts","templatedef-context.ts","components/data-editor/DataEditor.tsx","components/template/IconLabel.tsx","components/template/SubSection.tsx","components/template/Section.tsx","components/template/LatestTemplate.tsx","components/template/index.ts","App.tsx","reportWebVitals.ts","index.tsx","components/data-editor/DataEditor.module.css","components/template/Section.module.css"],"names":["module","exports","Doc","children","scale","docStyles","className","styles","doc","style","isIEOrEdge","test","window","navigator","userAgent","setVal","obj","field","value","arrMatch","match","idx","fieldVal","length","push","set","path","fields","split","root","rest","rootVal","Array","isArray","getVal","join","DATAFIELD_NATIVE_TYPES","INPUT","SELECT","MULTILINE","isGroupDataField","type","Object","values","indexOf","getGroupDataFromGrpDef","grpDef","groupDefMap","curData","curGrpData","grpData","dataFields","forEach","df","getDataFromFieldDef","dataFieldDef","data","multiple","console","error","map","TemplateDefContext","React","createContext","DataChangeContext","onDataChange","typeElemMap","NATIVE_TYPES","label","placeholder","viewData","options","opt","Option","name","FieldItemRenderer","props","useContext","viewType","control","dataPath","DataGroupRenderer","grpDataFieldDef","grpPath","grpType","dataField","DataFieldRenderer","docData","handleAdd","emptyVal","description","dataItem","Footer","extraContent","onClick","DataEditor","templateDef","container","templateName","documentType","Provider","IconLabel","icon","textStyle","iconStyle","isLink","iconLabelBlock","iconLabelIcon","href","replace","iconLabelTxt","target","SubSection","title","subtitle","date","location","subSection","subSectionHead","subSecTitleText","subSecLocText","subSecIcon","subSecSubTitleText","subSecDateText","Section","section","sectionTitle","library","add","fab","faEnvelope","faMapMarkerAlt","faMobileAlt","faCalendarAlt","getTwoRowArray","skills","len","med","Math","ceil","multiSkills","i","multi","renderSkillTable","skillMap","reduce","skillGrpMap","skill","rating","proficient","familiar","groupSkills","profSkillsLen","famSkillsLen","multiGrp","profSkills","famSkills","skillTable","cellSpacing","cellPadding","colSpan","grpHeader","index","LatestTemplate","useEffect","document","docTitle","header","topHeading","topInfo","currentLocation","contactNumber","email","skype","github","linkedin","lefCol","summary","experience","exp","company","role","dateRange","sectionList","contributions","contrib","rightCol","skillSet","category","education","edu","degree","school","details","personalDetails","detailsLabel","Template","App","open","useMemo","dataGroups","groupId","getGroupDefMap","useState","validData","validateData","resumeData","setDocData","setScale","editOpen","setEditOpen","handleZoom","zoomIn","app","toolbar","gap","auto","size","execCommand","e","print","panels","hideEdit","editContainer","docContainer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4c408b9b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"doc\":\"Doc_doc__1wU2V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LatestTemplate_container__3fNn2\",\"fontThin\":\"LatestTemplate_fontThin__3BNR7\",\"fontLight\":\"LatestTemplate_fontLight__VZKBu\",\"fontBold\":\"LatestTemplate_fontBold__18x2G\",\"header\":\"LatestTemplate_header__293nT\",\"topHeading\":\"LatestTemplate_topHeading__ga712\",\"topInfo\":\"LatestTemplate_topInfo__3DPIV\",\"lefCol\":\"LatestTemplate_lefCol__36YaX\",\"rightCol\":\"LatestTemplate_rightCol__inndC\",\"sectionList\":\"LatestTemplate_sectionList__2BZXf\",\"skillTable\":\"LatestTemplate_skillTable__1EnxW\",\"grpHeader\":\"LatestTemplate_grpHeader__2EmGU\",\"detailsLabel\":\"LatestTemplate_detailsLabel__2fVk3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"subSection\":\"SubSection_subSection__2OSGx\",\"subSectionHead\":\"SubSection_subSectionHead__Ae0xt\",\"subSecIcon\":\"SubSection_subSecIcon__3wEcD\",\"subSecLocText\":\"SubSection_subSecLocText__hTzKO\",\"subSecDateText\":\"SubSection_subSecDateText__1zjcK\",\"subSecTitleText\":\"SubSection_subSecTitleText__2Wd8O\",\"subSecSubTitleText\":\"SubSection_subSecSubTitleText__r42sh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1kX79\",\"toolbar\":\"App_toolbar__11cl6\",\"panels\":\"App_panels__1JbaM\",\"docContainer\":\"App_docContainer__ghnyp\",\"editContainer\":\"App_editContainer__LozrB\",\"hideEdit\":\"App_hideEdit__8ZaTR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"iconLabelBlock\":\"IconLabel_iconLabelBlock__1BJ6R\",\"iconLabelIcon\":\"IconLabel_iconLabelIcon__uIxNV\",\"iconLabelTxt\":\"IconLabel_iconLabelTxt__1BxdN\"};","import React, { CSSProperties } from 'react';\nimport styles from './Doc.module.css';\n\ninterface DocProps {\n  scale: number;\n  children: React.ReactNode;\n}\n\nfunction Doc({ children, scale }: DocProps) {\n  const zoomSupported = true;\n  const docStyles: CSSProperties = {};\n  if (zoomSupported) {\n    docStyles['zoom'] = `${scale}`;\n  } else {\n    docStyles['transform'] = `scale(${scale})`;\n  }\n  return (\n    <div className={styles.doc}>\n      <div style={docStyles}>{children}</div>\n    </div>\n  );\n}\n\nexport default Doc;\n","import {\n  TemplateDataFieldDef,\n  TemplateDef,\n  TemplateGroupDef,\n} from '../components/data-editor/template-def.model';\n\nexport const isIEOrEdge = /msie\\s|trident\\/|edge\\//i.test(\n  window.navigator.userAgent\n);\n\nconst setVal = (obj: any, field: string, value: any): any => {\n  const arrMatch = field.match(/^(.*)\\[(\\d+)\\]$/);\n  if (arrMatch) {\n    const field = arrMatch[1];\n    const idx = +arrMatch[2];\n\n    const fieldVal = [...obj[field]];\n    if (idx >= 0 && idx < fieldVal.length) {\n      fieldVal[idx] = value;\n    } else if (idx === fieldVal.length) {\n      // add to array\n      fieldVal.push(value);\n    }\n    return { ...obj, [field]: fieldVal };\n  }\n  return { ...obj, [field]: value };\n};\n\nconst getVal = (obj: any, field: string): any => {\n  if (!obj) {\n    return obj;\n  }\n\n  const arrMatch = field.match(/^(.*)\\[(\\d+)\\]$/);\n  if (arrMatch) {\n    const field = arrMatch[1];\n    const idx = +arrMatch[2];\n\n    const fieldVal = obj[field];\n    return fieldVal && Array.isArray(fieldVal) && fieldVal[idx];\n  }\n\n  return obj[field];\n};\n\n/**\n * Set given value to the obj based on path and returns new obj\n * Note: Multi dimentional array won't work, only nested objects and array of objects\n *\n * @param obj current obj\n * @param path object path eg: \"a.b[2].c\"\n * @param value value to set\n */\nexport const set = (obj: any, path: string, value: any): any => {\n  if (!path) {\n    return obj;\n  }\n\n  const fields = path.split('.');\n\n  if (fields.length === 1) {\n    return setVal(obj, fields[0], value);\n  }\n\n  const [root, ...rest] = fields;\n  const rootVal = set(getVal(obj, root), rest.join('.'), value);\n  return setVal(obj, root, rootVal);\n};\n\nexport const isEmpty = (obj: any) =>\n  Array.isArray(obj) ? obj.length === 0 : !obj;\n\nexport const DATAFIELD_NATIVE_TYPES = {\n  INPUT: 'INPUT',\n  SELECT: 'SELECT',\n  MULTILINE: 'MULTILINE',\n};\n\n/**\n * Check whether given type is group type\n *\n * @param type data field type\n */\nexport const isGroupDataField = (type: string) =>\n  Object.values(DATAFIELD_NATIVE_TYPES).indexOf(type) < 0;\n\n/**\n * Get group definitions map from template def\n *\n * @param templateDef template def\n */\nexport const getGroupDefMap = (templateDef: TemplateDef) =>\n  templateDef?.dataGroups?.reduce((map, grpDef) => {\n    const grpId = grpDef.groupId;\n    map[grpId] = grpDef;\n    return map;\n  }, {} as Record<string, TemplateGroupDef>);\n\n/**\n * Create data from TemplateGroupDef and merge with existing data if present\n * @param grpDef\n * @param groupDefMap\n * @param curData\n */\nconst getGroupDataFromGrpDef = (\n  grpDef: TemplateGroupDef,\n  groupDefMap: Record<string, TemplateGroupDef>,\n  curData?: any\n) => {\n  const curGrpData: Record<string, any> = curData || {};\n  const grpData: Record<string, any> = {};\n  grpDef?.dataFields?.forEach((df) => {\n    grpData[df.field] = getDataFromFieldDef(\n      df,\n      groupDefMap,\n      curGrpData[df.field]\n    );\n  });\n  return grpData;\n};\n\n/**\n * Create data field data based on data field def from\n * template def and merge with existing data if present\n *\n * @param dataFieldDef data field def\n * @param groupDefMap group definitions map\n * @param data existing data field data\n */\nexport const getDataFromFieldDef = (\n  dataFieldDef: TemplateDataFieldDef,\n  groupDefMap: Record<string, TemplateGroupDef>,\n  data?: any\n) => {\n  const { type = DATAFIELD_NATIVE_TYPES.INPUT, multiple } = dataFieldDef;\n\n  let curData = data;\n  if (!multiple && Array.isArray(data)) {\n    console.error(\n      `Invalid array data for non multiple field ${dataFieldDef.field}`\n    );\n    curData = null;\n  } else if (multiple && !Array.isArray(data)) {\n    console.error(`Invalid data for multi-value field ${dataFieldDef.field}`);\n    curData = null;\n  }\n\n  // empty array will be replaced with single elem array later\n  if (multiple && curData && curData.length === 0) {\n    curData = null;\n  }\n\n  if (!isGroupDataField(type)) {\n    // return current data as is if valid\n    // else return empty value or array with single empty value\n    return curData || (multiple ? [''] : '');\n  }\n\n  const grpDef = groupDefMap[type];\n  if (!grpDef) {\n    console.error(`Group with type ${type} not found`);\n    return multiple ? [{}] : {};\n  }\n\n  if (!multiple) {\n    return getGroupDataFromGrpDef(grpDef, groupDefMap, curData);\n  }\n\n  if (!curData) {\n    // multiple group data field, but current data is invalid / empty\n    // create empty grp obj and return as single value array\n    return [getGroupDataFromGrpDef(grpDef, groupDefMap, null)];\n  } else {\n    // multiple group data field, with valid current data array\n    return (curData as any[]).map((curGrpData) =>\n      getGroupDataFromGrpDef(grpDef, groupDefMap, curGrpData)\n    );\n  }\n};\n\n/**\n * Validate document data with template def\n *\n * @param data document data\n * @param templateDef template def\n * @param groupDefMap group definitions map\n */\nexport const validateData = (\n  data: any,\n  templateDef: TemplateDef,\n  groupDefMap?: Record<string, TemplateGroupDef>\n): Record<string, any> => {\n  if (!templateDef || !groupDefMap) {\n    return data;\n  }\n\n  const validData: Record<string, any> = {};\n  templateDef?.dataFields?.forEach((dataField) => {\n    validData[dataField.field] = getDataFromFieldDef(\n      dataField,\n      groupDefMap,\n      data[dataField.field]\n    );\n  });\n\n  return validData;\n};\n","import React from 'react';\nimport {\n  TemplateDef,\n  TemplateGroupDef,\n} from './components/data-editor/template-def.model';\n\nconst TemplateDefContext = React.createContext<{\n  groupDefMap?: Record<string, TemplateGroupDef>;\n  templateDef?: TemplateDef;\n}>({});\n\nexport default TemplateDefContext;\n","import React, { SyntheticEvent, useContext } from 'react';\nimport { Button, Card, Input, Textarea, Select } from '@geist-ui/react';\nimport TemplateDefContext from '../../templatedef-context';\nimport {\n  DATAFIELD_NATIVE_TYPES as NATIVE_TYPES,\n  isGroupDataField,\n  set,\n  getDataFromFieldDef,\n} from '../../utils/utils';\nimport styles from './DataEditor.module.css';\nimport { TemplateDataFieldDef, ViewData } from './template-def.model';\n\ninterface DataEditorProps {\n  data: Record<string, any>;\n  onDataChange: (data: Record<string, any>) => void;\n}\n\nconst DataChangeContext = React.createContext<DataEditorProps>({\n  data: {},\n  onDataChange: (data) => {},\n});\n\ninterface FieldItemRendererProps {\n  label: string;\n  value: string;\n  viewData?: Partial<ViewData>;\n  viewType: string;\n  dataPath: string;\n}\n\nconst typeElemMap = {\n  [NATIVE_TYPES.INPUT]: ({ value, label }: Partial<FieldItemRendererProps>) => (\n    <Input value={value} placeholder={label} />\n  ),\n  [NATIVE_TYPES.MULTILINE]: ({\n    value,\n    label,\n  }: Partial<FieldItemRendererProps>) => (\n    <Textarea value={value} placeholder={label} />\n  ),\n  [NATIVE_TYPES.SELECT]: ({\n    value,\n    label,\n    viewData,\n  }: Partial<FieldItemRendererProps>) => (\n    <Select placeholder={label}>\n      {viewData?.options?.map((opt) => (\n        <Select.Option key={opt.value} value={opt.value}>\n          {opt.name}\n        </Select.Option>\n      ))}\n    </Select>\n  ),\n};\n\nfunction FieldItemRenderer(props: FieldItemRendererProps) {\n  const { data, onDataChange } = useContext(DataChangeContext);\n  const { viewType, dataPath } = props;\n  const control = typeElemMap[viewType];\n  const handleChange = (_: SyntheticEvent, { value }: any) => {\n    onDataChange(set(data, dataPath, value));\n  };\n\n  return control && control(props);\n}\n\ninterface DataGroupRendererProps {\n  grpDataFieldDef: TemplateDataFieldDef;\n  grpData: Record<string, any>;\n  grpPath: string;\n}\n\nfunction DataGroupRenderer({\n  grpDataFieldDef,\n  grpData,\n  grpPath,\n}: DataGroupRendererProps) {\n  const { groupDefMap } = useContext(TemplateDefContext);\n  const grpType = grpDataFieldDef.type;\n  if (!grpType || !groupDefMap || !groupDefMap[grpType]) {\n    return null;\n  }\n\n  return (\n    <>\n      {groupDefMap[grpType].dataFields?.map((dataField, idx) => (\n        <DataFieldRenderer\n          key={`${grpPath}.${dataField.field}`}\n          dataFieldDef={dataField}\n          data={grpData[dataField.field]}\n          dataPath={`${grpPath}.${dataField.field}`}\n        />\n      ))}\n    </>\n  );\n}\n\ninterface DataFieldRendererProps {\n  dataFieldDef: TemplateDataFieldDef;\n  data: any | Record<string, any>;\n  dataPath: string;\n}\n\nfunction DataFieldRenderer({\n  dataFieldDef,\n  data,\n  dataPath,\n}: DataFieldRendererProps) {\n  const type = dataFieldDef.type || NATIVE_TYPES.INPUT;\n  const multiple = dataFieldDef.multiple;\n\n  const { groupDefMap } = useContext(TemplateDefContext);\n  const { data: docData, onDataChange } = useContext(DataChangeContext);\n\n  const handleAdd = (\n    path: string,\n    dataFieldDef: TemplateDataFieldDef\n  ) => () => {\n    // create empty data\n    const emptyVal = getDataFromFieldDef(dataFieldDef, groupDefMap || {});\n    onDataChange(\n      set(docData, path, Array.isArray(emptyVal) ? emptyVal[0] : emptyVal)\n    );\n  };\n\n  if (isGroupDataField(type)) {\n    return (\n      <Card>\n        <div>{dataFieldDef.description}</div>\n        <div>\n          {multiple ? (\n            (data as Record<string, any>[]).map((dataItem, idx) => (\n              <DataGroupRenderer\n                key={`${dataPath}[${idx}]`}\n                grpDataFieldDef={dataFieldDef}\n                grpData={dataItem}\n                grpPath={`${dataPath}[${idx}]`}\n              />\n            ))\n          ) : (\n            <DataGroupRenderer\n              grpDataFieldDef={dataFieldDef}\n              grpData={data}\n              grpPath={dataPath}\n            />\n          )}\n        </div>\n        {multiple && (\n          <Card.Footer className={styles.extraContent}>\n            <Button\n              onClick={handleAdd(`${dataPath}[${data.length}]`, dataFieldDef)}\n            >\n              Add {dataFieldDef.description}\n            </Button>\n          </Card.Footer>\n        )}\n      </Card>\n    );\n  }\n\n  return (\n    <>\n      {multiple ? (\n        (data as any[]).map((dataItem, idx) => (\n          <FieldItemRenderer\n            key={`${dataPath}[${idx}]`}\n            label={dataFieldDef.description}\n            value={dataItem}\n            viewData={dataFieldDef.data}\n            viewType={type}\n            dataPath={`${dataPath}[${idx}]`}\n          />\n        ))\n      ) : (\n        <FieldItemRenderer\n          label={dataFieldDef.description}\n          value={data}\n          viewData={dataFieldDef.data}\n          viewType={type}\n          dataPath={dataPath}\n        />\n      )}\n      {multiple && (\n        <div className={styles.extraContent}>\n          <Button\n            onClick={handleAdd(`${dataPath}[${data.length}]`, dataFieldDef)}\n          >\n            Add {dataFieldDef.description}\n          </Button>\n        </div>\n      )}\n    </>\n  );\n}\n\nfunction DataEditor({ data, onDataChange }: DataEditorProps) {\n  const { templateDef } = useContext(TemplateDefContext);\n\n  return (\n    <div className={styles.container}>\n      <div>Document Template: {templateDef?.templateName}</div>\n      <div>Document Type: {templateDef?.documentType}</div>\n      <DataChangeContext.Provider value={{ data, onDataChange }}>\n        <div>\n          {templateDef?.dataFields?.map((dataFieldDef) => (\n            <DataFieldRenderer\n              key={`${dataFieldDef.field}`}\n              dataFieldDef={dataFieldDef}\n              dataPath={dataFieldDef.field}\n              data={data[dataFieldDef.field]}\n            />\n          ))}\n        </div>\n      </DataChangeContext.Provider>\n    </div>\n  );\n}\n\nexport default DataEditor;\n","import React from 'react';\nimport styles from './IconLabel.module.css';\nimport {\n  FontAwesomeIconProps,\n  FontAwesomeIcon as FIcon,\n} from '@fortawesome/react-fontawesome';\n\ninterface IconLabelProps {\n  icon: FontAwesomeIconProps['icon'];\n  children: string;\n  textStyle?: string;\n  iconStyle?: string;\n  isLink?: boolean;\n}\n\nfunction IconLabel({\n  icon,\n  children,\n  textStyle = '',\n  iconStyle = '',\n  isLink = false,\n}: IconLabelProps) {\n  if (!children) {\n    return null;\n  }\n  return (\n    <div className={styles.iconLabelBlock}>\n      <FIcon icon={icon} className={`${styles.iconLabelIcon} ${iconStyle}`} />\n      {!isLink ? (\n        <span className={`${styles.iconLabelTxt} ${textStyle}`}>\n          {children}\n        </span>\n      ) : (\n        <a\n          href={`https://${children.replace(/(http|https):\\/\\//g, '')}`}\n          className={`${styles.iconLabelTxt} ${textStyle}`}\n          target=\"blank\"\n        >\n          {children}\n        </a>\n      )}\n    </div>\n  );\n}\n\nexport default IconLabel;\n","import React from 'react';\nimport IconLabel from './IconLabel';\nimport styles from './SubSection.module.css';\n\ninterface SubSectionProps {\n  title?: string;\n  subtitle?: string;\n  date?: string;\n  location?: string;\n  children?: React.ReactNode;\n}\n\nfunction SubSection({\n  title,\n  children,\n  subtitle,\n  date,\n  location,\n}: SubSectionProps) {\n  return (\n    <div className={styles.subSection}>\n      {(title || location) && (\n        <div className={styles.subSectionHead}>\n          {title && <div className={styles.subSecTitleText}>{title}</div>}\n          {location && (\n            <IconLabel\n              icon=\"map-marker-alt\"\n              textStyle={styles.subSecLocText}\n              iconStyle={styles.subSecIcon}\n            >\n              {location}\n            </IconLabel>\n          )}\n        </div>\n      )}\n      {(subtitle || date) && (\n        <div className={styles.subSectionHead}>\n          {subtitle && (\n            <div className={styles.subSecSubTitleText}>{subtitle}</div>\n          )}\n          {date && (\n            <IconLabel\n              icon=\"calendar-alt\"\n              textStyle={styles.subSecDateText}\n              iconStyle={styles.subSecIcon}\n            >\n              {date}\n            </IconLabel>\n          )}\n        </div>\n      )}\n      <div>{children}</div>\n    </div>\n  );\n}\n\nexport default SubSection;\n","import React from 'react';\nimport styles from './Section.module.css';\n\ninterface SectionProps {\n  title: string;\n  children?: React.ReactNode;\n}\n\nfunction Section({ title, children }: SectionProps) {\n  return (\n    <div className={styles.section}>\n      <div className={styles.sectionTitle}>{title}</div>\n      <div>{children}</div>\n    </div>\n  );\n}\n\nexport default Section;\n","import React, { useEffect } from 'react';\nimport styles from './LatestTemplate.module.css';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport {\n  faEnvelope,\n  faMapMarkerAlt,\n  faMobileAlt,\n  faCalendarAlt,\n} from '@fortawesome/free-solid-svg-icons';\nimport { LatestTemplateData, Skill } from './LatestTemplate.model';\nimport SubSection from './SubSection';\nimport IconLabel from './IconLabel';\nimport Section from './Section';\n\nlibrary.add(fab, faEnvelope, faMapMarkerAlt, faMobileAlt, faCalendarAlt);\n\ninterface LatestTemplateProps {\n  data: Record<string, any>;\n}\n\ntype SkillGroup = 'proficient' | 'familiar';\n\nconst groupSkills = (skills: Partial<Skill>[]) =>\n  skills.reduce(\n    (skillGrpMap: Record<SkillGroup, Partial<Skill>[]>, skill) => {\n      const grpKey =\n        skill.rating && skill.rating > 1 ? 'proficient' : 'familiar';\n      skillGrpMap[grpKey].push(skill);\n      return skillGrpMap;\n    },\n    { proficient: [], familiar: [] }\n  );\n\nconst getTwoRowArray = <T,>(skills: T[]) => {\n  const len = skills.length;\n  const med = Math.ceil(len / 2);\n  const multiSkills = [];\n  for (let i = 0; i < med; i++) {\n    const multi: [T | null, T | null] = [null, null];\n    multi[0] = skills[i];\n    if (i + med < len) {\n      multi[1] = skills[i + med];\n    }\n    multiSkills.push(multi);\n  }\n  return multiSkills;\n};\n\nconst renderSkillTable = (skills: Partial<Skill>[]) => {\n  const skillMap = groupSkills(skills);\n  const profSkillsLen = skillMap.proficient.length;\n  const famSkillsLen = skillMap.familiar.length;\n\n  const multiGrp = profSkillsLen > 0 && famSkillsLen > 0;\n\n  const profSkills = getTwoRowArray(skillMap.proficient);\n  const famSkills = getTwoRowArray(skillMap.familiar);\n\n  return (\n    <table className={styles.skillTable} cellSpacing={0} cellPadding={0}>\n      <tbody>\n        <tr>\n          <td colSpan={2} className={styles.grpHeader}>\n            {multiGrp ? 'Proficient' : ''}\n          </td>\n        </tr>\n        {profSkills.length > 0 &&\n          profSkills.map((skill, index) => (\n            <tr key={index}>\n              <td>{skill[0]?.label}</td>\n              <td>{skill[1]?.label}</td>\n            </tr>\n          ))}\n        {multiGrp && (\n          <tr>\n            <td colSpan={2} className={styles.grpHeader}>\n              Familiar\n            </td>\n          </tr>\n        )}\n        {famSkills.length > 0 &&\n          famSkills.map((skill, index) => (\n            <tr key={index}>\n              <td>{skill[0]?.label}</td>\n              <td>{skill[1]?.label}</td>\n            </tr>\n          ))}\n      </tbody>\n    </table>\n  );\n};\n\nfunction LatestTemplate(props: LatestTemplateProps) {\n  const data = props.data as LatestTemplateData;\n\n  useEffect(() => {\n    document.title = data.docTitle;\n  }, [data.docTitle]);\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.header}>\n        <div className={styles.topHeading}>{data.name}</div>\n        <div className={styles.topInfo}>\n          <IconLabel icon=\"map-marker-alt\">{data.currentLocation}</IconLabel>\n          <IconLabel icon=\"mobile-alt\">{data.contactNumber}</IconLabel>\n          <IconLabel icon=\"envelope\">{data.email}</IconLabel>\n          <IconLabel icon={['fab', 'skype']}>{data.skype}</IconLabel>\n          <IconLabel icon={['fab', 'github']} isLink>\n            {data.github}\n          </IconLabel>\n          <IconLabel icon={['fab', 'linkedin']} isLink>\n            {data.linkedin}\n          </IconLabel>\n        </div>\n      </div>\n      <div className={styles.lefCol}>\n        <Section title=\"Summary\">{data.summary}</Section>\n        <Section title=\"Experience\">\n          {data.experience?.map((exp, index) => (\n            <SubSection\n              key={index}\n              title={exp.company}\n              subtitle={exp.role}\n              location={exp.location}\n              date={exp.dateRange}\n            >\n              <ul className={styles.sectionList}>\n                {exp.contributions?.map((contrib, index) => (\n                  <li key={index}>{contrib}</li>\n                ))}\n              </ul>\n            </SubSection>\n          ))}\n        </Section>\n      </div>\n      <div className={styles.rightCol}>\n        <Section title=\"Skills\">\n          {data.skillSet?.map((skillSet, index) => (\n            <SubSection title={skillSet.category} key={index}>\n              {renderSkillTable(skillSet.skills)}\n            </SubSection>\n          ))}\n        </Section>\n        <Section title=\"Education\">\n          {data.education?.map((edu, index) => (\n            <SubSection\n              key={index}\n              title={edu.degree}\n              subtitle={edu.school}\n              date={edu.dateRange}\n            >\n              <div>{edu.details}</div>\n            </SubSection>\n          ))}\n        </Section>\n        <Section title=\"Personal Details\">\n          {data.personalDetails?.map(({ label, value }, index) => (\n            <div key={index}>\n              <span className={styles.detailsLabel}>{`${label}:`}</span>\n              <span>{value}</span>\n            </div>\n          ))}\n        </Section>\n      </div>\n    </div>\n  );\n}\n\nexport default LatestTemplate;\n","import Template from './LatestTemplate';\nimport tplDef from './LatestTemplate.json';\n\nexport const templateDef = tplDef;\n\nexport default Template;\n","import React, { useMemo, useState } from 'react';\nimport { Button, Col, Row } from '@geist-ui/react';\nimport styles from './App.module.css';\nimport Doc from './components/Doc';\nimport { getGroupDefMap, isIEOrEdge, validateData } from './utils/utils';\nimport DataEditor from './components/data-editor/DataEditor';\nimport TemplateDefContext from './templatedef-context';\nimport Template, { templateDef } from './components/template';\nimport resumeData from './data/resume.json';\nimport {\n  FullScreen,\n  Edit,\n  ZoomIn,\n  ZoomOut,\n  Printer,\n} from '@geist-ui/react-icons';\n\nfunction App() {\n  const groupDefMap = useMemo(() => getGroupDefMap(templateDef), []);\n  const [docData, setDocData] = useState<Record<string, any>>(\n    validateData(resumeData, templateDef, groupDefMap)\n  );\n  const [scale, setScale] = useState(1);\n  const [editOpen, setEditOpen] = useState(false);\n\n  const handlePrint = () => {\n    // If Edge or IE, try catch with execCommand\n    if (isIEOrEdge) {\n      try {\n        window.document.execCommand('print', false);\n      } catch (e) {\n        window.print();\n      }\n    } else {\n      // Other browsers\n      window.print();\n    }\n  };\n\n  const handleDataChange = (data: Record<string, any>) => {\n    setDocData(data);\n  };\n\n  const handleZoom = (zoomIn: boolean) => () => {\n    const factor = zoomIn ? 0.1 : -0.1;\n    setScale(scale + factor);\n  };\n\n  const handleReset = () => {\n    setScale(1);\n  };\n\n  const handleEdit = (open: boolean) => () => {\n    setEditOpen(open);\n  };\n\n  return (\n    <div className={styles.app}>\n      <div className={`${styles.toolbar} hideInPrint`}>\n        <Row gap={0.3}>\n          <Col>\n            <Button\n              type=\"success\"\n              auto\n              icon={<FullScreen />}\n              size=\"small\"\n              onClick={handleReset}\n            />\n          </Col>\n          <Col>\n            <Button\n              type=\"success\"\n              auto\n              icon={<ZoomIn />}\n              size=\"small\"\n              onClick={handleZoom(true)}\n            />\n          </Col>\n          <Col>\n            <Button\n              type=\"success\"\n              auto\n              icon={<ZoomOut />}\n              size=\"small\"\n              onClick={handleZoom(false)}\n            />\n          </Col>\n          <Col>\n            <Button\n              type=\"success\"\n              auto\n              icon={<Edit />}\n              size=\"small\"\n              onClick={handleEdit(!editOpen)}\n            />\n          </Col>\n          <Col>\n            <Button\n              type=\"success\"\n              auto\n              icon={<Printer />}\n              size=\"small\"\n              onClick={handlePrint}\n            />\n          </Col>\n        </Row>\n      </div>\n      <div className={`${styles.panels} ${!editOpen ? styles.hideEdit : ''}`}>\n        <div className={styles.editContainer}>\n          <TemplateDefContext.Provider value={{ templateDef, groupDefMap }}>\n            <DataEditor data={docData} onDataChange={handleDataChange} />\n          </TemplateDefContext.Provider>\n        </div>\n        <div className={styles.docContainer}>\n          <Doc scale={scale}>\n            <Template data={docData} />\n          </Doc>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport { GeistProvider } from '@geist-ui/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GeistProvider>\n      {/* <CssBaseline /> */}\n      <App />\n    </GeistProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DataEditor_container__3BCGp\",\"extraContent\":\"DataEditor_extraContent__1dfqG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2rmXH\",\"sectionTitle\":\"Section_sectionTitle__2_5V7\"};"],"sourceRoot":""}